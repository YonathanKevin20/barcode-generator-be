services:
  api:
    build: .
    image: barcode-generator-api:1.0.0
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    networks:
      - barcode_generator
    restart: unless-stopped
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - barcode_generator
    restart: always
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - barcode_generator
    restart: always
  backup:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - ./backups:/backups
      - ./backup.sh:/app/backup.sh
    working_dir: /app
    entrypoint: /bin/sh -c 'echo "0 0 * * * /bin/sh /app/backup.sh" > /etc/crontabs/root && crond -f -l 2'
    networks:
      - barcode_generator
    restart: always
    depends_on:
      - postgres
    environment:
      - UID=${UID:-1000}
      - GID=${GID:-1000}

networks:
  barcode_generator:
    name: barcode_generator_network
    driver: bridge

volumes:
  postgres_data:
    name: barcode_generator_postgres_data
  redis_data:
    name: barcode_generator_redis_data
